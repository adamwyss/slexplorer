<UserControl x:Class="Ijv.Redstone.TextEditor.Views.TextEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
             xmlns:controls="clr-namespace:Ijv.Redstone.Controls;assembly=Ijv.Redstone.Controls"
             xmlns:localcontrols="clr-namespace:Ijv.Redstone.Controls">
    <UserControl.Resources>
        <controls:VisibilityConverter x:Name="VisibleIsTrueConverter" VisibleIs="True" />
        <controls:BooleanInverseConverter x:Name="BooleanInverseConverter" />
        <localcontrols:TextWrappingConverter x:Name="WrapIsTrueConverter" WrapIs="True" />
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" Background="#DFE9F5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBox x:FieldModifier="private" x:Name="TextArea" 
                 Text="{Binding Text, Mode=TwoWay}"
                 TextWrapping="{Binding IsWordWrapEnabled, Converter={StaticResource WrapIsTrueConverter}}"
                 FontSize="14" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto"
                 controls:KeyPress.IsBoundOnChange="True"  Grid.Row="1">
            <TextBox.Template>
                <ControlTemplate>
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#5EC9C9C9"/>
                                <Border BorderThickness="1" BorderBrush="Transparent">
                                    <ScrollViewer x:Name="ContentElement" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
                    </Grid>
                </ControlTemplate>
            </TextBox.Template>
        </TextBox>

        <Grid Height="25" Visibility="{Binding IsStatusBarVisible, Converter={StaticResource VisibleIsTrueConverter}}" Grid.Row="2" />
        
        <controls:Ribbon Grid.Row="0">
            <controls:RibbonTab Label="Home">
                <controls:RibbonGroup Label="Clipboard">
                    <controls:RibbonGroup.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </controls:RibbonGroup.ItemsPanel>
                    <Button Command="{Binding PasteCommand}" Grid.Column="0" Grid.RowSpan="3">
                        <controls:RibbonLabel Text="Paste" Image="./assets/paste32.png" />
                    </Button>
                    <Button Command="{Binding CutCommand}" Tag="2" Grid.Column="1" Grid.Row="0">
                        <controls:RibbonLabel Text="Cut" Image="./assets/cut16.png" />
                    </Button>
                    <Button Command="{Binding CopyCommand}" Tag="2" Grid.Column="1" Grid.Row="1">
                        <controls:RibbonLabel Text="Copy" Image="./assets/copy16.png" />
                    </Button>
                </controls:RibbonGroup>
                <controls:RibbonGroup Label="Editing">
                    <controls:RibbonGroup.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </controls:RibbonGroup.ItemsPanel>
                    <Button Command="{Binding FindCommand}" Tag="2" Grid.Row="0">
                        <controls:RibbonLabel Text="Find" Image="./assets/find16.png" />
                    </Button>
                    <Button Command="{Binding ReplaceCommand}" Tag="2" Grid.Row="1">
                        <controls:RibbonLabel Text="Replace" Image="./assets/replace16.png" />
                    </Button>
                    <Button Command="{Binding SelectAllCommand}" Tag="2" Grid.Row="2">
                        <controls:RibbonLabel Text="Select all" Image="./assets/selectall16.png" />
                    </Button>
                </controls:RibbonGroup>
            </controls:RibbonTab>
            
            <controls:RibbonTab Label="View">
                <controls:RibbonGroup Label="Zoom">
                    <Button Content="Zoom In" />
                    <Button Content="Zoom Out" />
                    <Button Content="100%" />
                </controls:RibbonGroup>
                <controls:RibbonGroup Label="Show or hide">
                    <controls:RibbonGroup.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid />
                        </ItemsPanelTemplate>
                    </controls:RibbonGroup.ItemsPanel>
                    <CheckBox Content="Status bar" IsChecked="{Binding IsStatusBarVisible, Mode=TwoWay}" VerticalAlignment="Top" />
                </controls:RibbonGroup>
                <controls:RibbonGroup Label="Settings">
                    <controls:MenuButton Content="Word wrap">
                        <controls:MenuButton.Menu>
                            <controls:Menu>
                                <controls:MenuItem Header="No wrap" IsCheckable="True" IsChecked="{Binding IsWordWrapEnabled, Mode=TwoWay, Converter={StaticResource BooleanInverseConverter}}" />
                                <controls:MenuItem Header="Wrap to window" IsCheckable="True" IsChecked="{Binding IsWordWrapEnabled, Mode=TwoWay}" />
                            </controls:Menu>
                        </controls:MenuButton.Menu>
                    </controls:MenuButton>
                </controls:RibbonGroup>
            </controls:RibbonTab>
            
        </controls:Ribbon>
        
        
    </Grid>
</UserControl>
